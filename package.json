{
  "name": "courtlistener-mcp",
  "version": "1.0.0",
  "description": "Model Context Protocol server for CourtListener API",
  "type": "module",
  "main": "build/index.js",
  "bin": {
    "courtlistener-mcp": "./build/index.js"
  },
  "scripts": {
    "build": "tsc && chmod +x build/index.js",
    "start": "npm run build && node build/index.js",
    "dev": "tsc --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest tests/integration-*.test.ts",
    "test:security": "jest tests/security*.test.ts",
    "test:docker": "jest tests/integration-*.test.ts",
    "docker:test": "docker-compose -f docker-compose.test.yml up --build --profile test",
    "docker:test-runner": "docker-compose -f docker-compose.test.yml up --build --profile test-runner",
    "docker:test-cleanup": "docker-compose -f docker-compose.test.yml down --volumes --remove-orphans",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "check-env": "node scripts/check-env.js",
    "demo:interactive": "npm run build && node demo/ollama-interactive.js",
    "demo:local": "scripts/run-demo.sh local",
    "demo:docker": "scripts/run-demo.sh docker",
    "demo:compose": "scripts/run-demo.sh compose",
    "demo:setup": "scripts/run-demo.sh setup",
    "demo:check": "scripts/run-demo.sh check"
  },
  "files": [
    "build"
  ],
  "keywords": [
    "mcp",
    "courtlistener",
    "legal",
    "case-law",
    "api"
  ],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "^24.0.12",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "eslint": "^9.30.1",
    "jest": "^29.7.0",
    "ts-jest": "^29.4.0",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.15.1",
    "dotenv": "^17.2.0",
    "node-fetch": "^3.3.2",
    "zod": "^3.25.76"
  }
}
