# Dockerfile for running tests in containerized environment
FROM node:20.18.1-alpine3.21

# Set working directory
WORKDIR /app

# Install test dependencies and utilities
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    bash \
    git

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install ALL dependencies (including dev dependencies for testing)
RUN npm ci --audit=false

# Copy source code and tests
COPY src/ ./src/
COPY tests/ ./tests/
COPY jest.config.cjs ./
COPY docker-entrypoint.sh ./

# Build the project
RUN npm run build

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S testuser -u 1001 -G nodejs

# Set permissions
RUN chown -R testuser:nodejs /app && \
    chmod +x docker-entrypoint.sh

# Switch to non-root user
USER testuser

# Set test environment
ENV NODE_ENV=test
ENV NODE_OPTIONS="--max-old-space-size=512"

# Health check for test container
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "console.log('Test container healthy')" || exit 1

# Use entrypoint script
ENTRYPOINT ["dumb-init", "--", "./docker-entrypoint.sh"]

# Default to running tests
CMD ["test"]
