version: '3.8'

# Docker Compose for Testing MCP Server Integration
# This setup runs MCP server, Ollama, and tests in containers on the same network

services:
  # CourtListener MCP Server for Testing
  courtlistener-mcp-test:
    build: .
    container_name: courtlistener-mcp-test
    environment:
      - COURTLISTENER_API_TOKEN=${COURTLISTENER_API_TOKEN}
      - OLLAMA_HOST=http://ollama:11434
      - NODE_ENV=test
      - DOCKER_CONTAINER=true
    networks:
      - test_net
    # Keep container alive for testing
    tty: true
    stdin_open: true
    # Override default command to run server
    command: ["server"]
    healthcheck:
      test: ["CMD", "sh", "-c", "pgrep -f 'node.*index\\.js' > /dev/null || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      ollama:
        condition: service_healthy

  # Ollama service for testing
  ollama:
    image: ollama/ollama:latest
    container_name: test-ollama
    ports:
      - "11435:11434"  # Map to different port to avoid conflict
    volumes:
      - ollama_test_data:/root/.ollama
    networks:
      - test_net
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --quiet --tries=1 --timeout=3 --spider http://localhost:11434/api/version || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    # Use default Ollama startup and pull model after
    restart: unless-stopped

  # Test runner service  
  mcp-test-runner:
    build: 
      context: .
      dockerfile: Dockerfile.test
    container_name: mcp-test-runner
    environment:
      - COURTLISTENER_API_TOKEN=${COURTLISTENER_API_TOKEN}
      - OLLAMA_HOST=http://ollama:11434
      - MCP_SERVER_CONTAINER=courtlistener-mcp-test
      - NODE_ENV=test
      - DOCKER_CONTAINER=true
    volumes:
      - ./tests:/app/tests
      - ./jest.config.cjs:/app/jest.config.cjs
      - ./tsconfig.test.json:/app/tsconfig.test.json
      - ./package.json:/app/package.json
    networks:
      - test_net
    depends_on:
      courtlistener-mcp-test:
        condition: service_healthy
      ollama:
        condition: service_healthy
    # Run containerized tests
    command: ["npm", "run", "test:docker"]

networks:
  test_net:
    driver: bridge

volumes:
  ollama_test_data:
